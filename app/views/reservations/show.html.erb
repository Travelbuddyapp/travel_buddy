<h1><%= @reservation.business_name %> Reservation</h1>
<%= link_to 'back', trip_path(@trip) %>
<div class="row">
  <div class="col s12 m6 l10">
    <div class="card">
    <div class="container">
      Type: <%= @reservation.type %><br>
      Business Name: <%= @reservation.business_name %><br>
      Confirmation #: <%= @reservation.confirmation_number %><br>
      Check in Date: <%= @reservation.check_in_date %><br>
      Check out Date: <%= @reservation.check_out_date %><br>
      <% if @reservation.address == nil %>
        No Address Added <br>
      <% else %>
        Address: <%= @reservation.address.address %><br>
      <% end %>
      Note: <%= @reservation.note %><br>
      <div class="card-action">
        <%= link_to "Edit", edit_trip_reservation_path(@trip, @reservation) %>
        <%= link_to 'Delete', trip_reservation_path(@trip, @reservation), data: {:confirm => 'Are you sure?'}, :method => :delete %>
      </div>
      </div>
    </div>
    <div class="col s12">
      <div id="map" style='height: 400px;'></div>
    </div>
  </div>
</div>
<script type="text/javascript">
  mapStyle = [
    {
      "featureType": "landscape.man_made",
      "elementType": "geometry",
      "stylers": [
        {
            "color": "#f7f1df"
        }
      ]
    },
    {
      "featureType": "landscape.natural",
      "elementType": "geometry",
      "stylers": [
        {
            "color": "#d0e3b4"
        }
      ]
    },
    {
      "featureType": "landscape.natural.terrain",
      "elementType": "geometry",
      "stylers": [
        {
            "visibility": "off"
        }
      ]
    },
    {
      "featureType": "poi",
      "elementType": "labels",
      "stylers": [
        {
            "visibility": "off"
        }
      ]
    },
    {
      "featureType": "poi.business",
      "elementType": "all",
      "stylers": [
        {
            "visibility": "off"
        }
      ]
    },
    {
      "featureType": "poi.medical",
      "elementType": "geometry",
      "stylers": [
        {
            "color": "#fbd3da"
        }
      ]
    },
    {
      "featureType": "poi.park",
      "elementType": "geometry",
      "stylers": [
        {
            "color": "#bde6ab"
        }
      ]
    },
    {
      "featureType": "road",
      "elementType": "geometry.stroke",
      "stylers": [
        {
            "visibility": "off"
        }
      ]
    },
    {
      "featureType": "road",
      "elementType": "labels",
      "stylers": [
        {
            "visibility": "off"
        }
      ]
    },
    {
      "featureType": "road.highway",
      "elementType": "geometry.fill",
      "stylers": [
        {
            "color": "#ffe15f"
        }
      ]
    },
    {
      "featureType": "road.highway",
      "elementType": "geometry.stroke",
      "stylers": [
        {
            "color": "#efd151"
        }
      ]
    },
    {
      "featureType": "road.arterial",
      "elementType": "geometry.fill",
      "stylers": [
        {
            "color": "#ffffff"
        }
      ]
    },
    {
      "featureType": "road.local",
      "elementType": "geometry.fill",
      "stylers": [
        {
            "color": "black"
        }
      ]
    },
    {
      "featureType": "transit.station.airport",
      "elementType": "geometry.fill",
      "stylers": [
        {
            "color": "#cfb2db"
        }
      ]
    },
    {
      "featureType": "water",
      "elementType": "geometry",
      "stylers": [
        {
            "color": "#a2daf2"
        }
      ]
    }
  ]
  
  handler = Gmaps.build('Google')
  handler.buildMap({ 
    provider: {
      styles: mapStyle
    }, 
    internal: {id: 'map'}}, 
    function(){
      markers = handler.addMarkers(<%=raw @hash.to_json %>);
      handler.bounds.extendWith(markers);
      handler.fitMapToBounds();
    }
  );
</script>

  